{"ast":null,"code":"var _jsxFileName = \"/Users/zacharyjeffreys/Documents/GitHub/MealBuddy/src/components/MealPlanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, TextField, Button, Card, CardContent, CardMedia, Grid, Paper, CircularProgress, FormControl, Stack, Checkbox, FormGroup, FormControlLabel, Stepper, Step, StepLabel, StepContent, ToggleButton, ToggleButtonGroup, Chip } from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport SendIcon from '@mui/icons-material/Send';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport RepeatIcon from '@mui/icons-material/Repeat';\nimport TodayIcon from '@mui/icons-material/Today';\nimport { addDays, format, startOfToday, endOfToday } from 'date-fns';\n\n// Mock data for meal suggestions (replace with actual API calls later)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockMeals = [{\n  id: 1,\n  name: 'Grilled Chicken Salad',\n  image: 'https://source.unsplash.com/random/400x300/?salad',\n  calories: 350,\n  time: '25 mins'\n}, {\n  id: 2,\n  name: 'Salmon with Quinoa',\n  image: 'https://source.unsplash.com/random/400x300/?salmon',\n  calories: 450,\n  time: '30 mins'\n}, {\n  id: 3,\n  name: 'Vegetarian Stir Fry',\n  image: 'https://source.unsplash.com/random/400x300/?stirfry',\n  calories: 300,\n  time: '20 mins'\n}];\nconst thinkingPhrases = [\"Analyzing your preferences...\", \"Exploring delicious options...\", \"Crafting your perfect meal plan...\", \"Considering nutritional balance...\", \"Finding the best recipes for you...\"];\nconst mealTypes = [{\n  id: 'breakfast',\n  label: 'Breakfast'\n}, {\n  id: 'lunch',\n  label: 'Lunch'\n}, {\n  id: 'dinner',\n  label: 'Dinner'\n}, {\n  id: 'snack',\n  label: 'Snacks'\n}];\nconst weekDays = [{\n  id: 'monday',\n  label: 'Mon'\n}, {\n  id: 'tuesday',\n  label: 'Tue'\n}, {\n  id: 'wednesday',\n  label: 'Wed'\n}, {\n  id: 'thursday',\n  label: 'Thu'\n}, {\n  id: 'friday',\n  label: 'Fri'\n}, {\n  id: 'saturday',\n  label: 'Sat'\n}, {\n  id: 'sunday',\n  label: 'Sun'\n}];\nfunction MealPlanner() {\n  _s();\n  const [activeStep, setActiveStep] = useState(0);\n  const [prompt, setPrompt] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedMeals, setSelectedMeals] = useState({\n    breakfast: false,\n    lunch: false,\n    dinner: false,\n    snack: false\n  });\n  const [planType, setPlanType] = useState('today');\n  const [startDate, setStartDate] = useState(startOfToday());\n  const [endDate, setEndDate] = useState(endOfToday());\n  const [selectedDays, setSelectedDays] = useState([]);\n  const [thinkingText, setThinkingText] = useState('');\n  const [currentPhraseIndex, setCurrentPhraseIndex] = useState(0);\n  const [currentCharIndex, setCurrentCharIndex] = useState(0);\n  const handlePlanTypeChange = (event, newType) => {\n    if (newType !== null) {\n      setPlanType(newType);\n      if (newType === 'today') {\n        setStartDate(startOfToday());\n        setEndDate(endOfToday());\n      } else if (newType === 'date-range') {\n        setStartDate(startOfToday());\n        setEndDate(addDays(startOfToday(), 7));\n      }\n    }\n  };\n  const handleDayToggle = day => {\n    setSelectedDays(prev => prev.includes(day) ? prev.filter(d => d !== day) : [...prev, day]);\n  };\n  const handleMealTypeChange = event => {\n    setSelectedMeals({\n      ...selectedMeals,\n      [event.target.name]: event.target.checked\n    });\n  };\n  const getSelectedMealTypes = () => {\n    return Object.entries(selectedMeals).filter(([_, isSelected]) => isSelected).map(([type]) => type);\n  };\n  const handleNext = () => {\n    setActiveStep(prevStep => prevStep + 1);\n  };\n  const handleBack = () => {\n    setActiveStep(prevStep => prevStep - 1);\n  };\n  useEffect(() => {\n    if (loading) {\n      const phraseInterval = setInterval(() => {\n        setCurrentPhraseIndex(prev => (prev + 1) % thinkingPhrases.length);\n        setCurrentCharIndex(0);\n      }, 2000);\n      const charInterval = setInterval(() => {\n        setCurrentCharIndex(prev => {\n          const currentPhrase = thinkingPhrases[currentPhraseIndex];\n          if (prev < currentPhrase.length) {\n            setThinkingText(currentPhrase.substring(0, prev + 1));\n            return prev + 1;\n          }\n          return prev;\n        });\n      }, 50);\n      return () => {\n        clearInterval(phraseInterval);\n        clearInterval(charInterval);\n      };\n    } else {\n      setThinkingText('');\n      setCurrentPhraseIndex(0);\n      setCurrentCharIndex(0);\n    }\n  }, [loading, currentPhraseIndex]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    // Simulate API call\n    setTimeout(() => {\n      setSuggestions(mockMeals);\n      setLoading(false);\n    }, 4000);\n  };\n  const steps = [{\n    label: 'Choose When to Plan',\n    content: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n        value: planType,\n        exclusive: true,\n        onChange: handlePlanTypeChange,\n        fullWidth: true,\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"today\",\n          \"aria-label\": \"today\",\n          sx: {\n            py: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TodayIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"date-range\",\n          \"aria-label\": \"date range\",\n          sx: {\n            py: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(CalendarMonthIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"Date Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"recurring\",\n          \"aria-label\": \"recurring\",\n          sx: {\n            py: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(RepeatIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"Weekly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), planType === 'today' ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"primary\",\n          gutterBottom: true,\n          children: \"Planning for Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          children: format(new Date(), 'EEEE, MMMM d, yyyy')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }, this) : planType === 'date-range' ? /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n        dateAdapter: AdapterDateFns,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n            label: \"Start Date\",\n            value: startDate,\n            onChange: newValue => {\n              setStartDate(newValue);\n              setEndDate(addDays(newValue, 7));\n            },\n            disablePast: true,\n            slotProps: {\n              textField: {\n                fullWidth: true\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            label: \"End Date\",\n            value: endDate,\n            onChange: newValue => setEndDate(newValue),\n            disablePast: true,\n            minDate: startDate,\n            slotProps: {\n              textField: {\n                fullWidth: true\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: \"Select days for your weekly meal plan:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1,\n            flexWrap: 'wrap',\n            justifyContent: 'center'\n          },\n          children: weekDays.map(day => /*#__PURE__*/_jsxDEV(Chip, {\n            label: day.label,\n            onClick: () => handleDayToggle(day.id),\n            color: \"primary\",\n            variant: selectedDays.includes(day.id) ? \"filled\" : \"outlined\",\n            sx: {\n              minWidth: '70px',\n              fontSize: '1rem'\n            }\n          }, day.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)\n  }, {\n    label: 'Select Meal Types',\n    content: /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      sx: {\n        width: '100%',\n        p: 2,\n        border: '1px solid',\n        borderColor: 'divider',\n        borderRadius: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: mealTypes.map(type => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: selectedMeals[type.id],\n              onChange: handleMealTypeChange,\n              name: type.id,\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 21\n            }, this),\n            label: type.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this)\n        }, type.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this)\n  }, {\n    label: 'Describe Your Preferences',\n    content: /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      placeholder: \"E.g., 'I want healthy vegetarian meals' or 'Quick protein-rich recipes'\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value),\n      multiline: true,\n      rows: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this)\n  }];\n  const isStepValid = step => {\n    switch (step) {\n      case 0:\n        if (planType === 'today') return true;\n        return planType === 'date-range' ? startDate && endDate && endDate >= startDate : selectedDays.length > 0;\n      case 1:\n        return Object.values(selectedMeals).some(Boolean);\n      case 2:\n        return prompt.trim().length > 0;\n      default:\n        return true;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      sx: {\n        mb: 3,\n        textAlign: 'center',\n        fontSize: {\n          xs: '2.5rem',\n          md: '3.5rem'\n        }\n      },\n      children: \"Meal planning made easy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"text.secondary\",\n      sx: {\n        mb: 4,\n        textAlign: 'center'\n      },\n      children: \"Tell us what you're looking for, and we'll create a personalized meal plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      elevation: 2,\n      sx: {\n        p: 3,\n        maxWidth: 800,\n        mx: 'auto',\n        mb: 6,\n        borderRadius: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        orientation: \"vertical\",\n        children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(Step, {\n          children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n            children: step.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2\n              },\n              children: [step.content, /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2,\n                  display: 'flex',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: index === steps.length - 1 ? handleSubmit : handleNext,\n                  disabled: loading || !isStepValid(index),\n                  children: index === steps.length - 1 ? 'Generate Plan' : 'Continue'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 21\n                }, this), index > 0 && /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleBack,\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this)]\n        }, step.label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        mb: 4,\n        minHeight: '3em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"primary\",\n        sx: {\n          fontWeight: 500,\n          opacity: 0.9,\n          animation: 'pulse 1.5s infinite',\n          '@keyframes pulse': {\n            '0%': {\n              opacity: 0.6\n            },\n            '50%': {\n              opacity: 1\n            },\n            '100%': {\n              opacity: 0.6\n            }\n          }\n        },\n        children: thinkingText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 3\n        },\n        children: \"Your Meal Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: \"text.secondary\",\n          children: planType === 'today' ? `Today, ${format(new Date(), 'MMMM d, yyyy')}` : planType === 'date-range' ? `${format(startDate, 'MMM d, yyyy')} - ${format(endDate, 'MMM d, yyyy')}` : `Weekly plan for: ${selectedDays.map(day => day.charAt(0).toUpperCase() + day.slice(1)).join(', ')}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: \"text.secondary\",\n          children: [\"Selected meal types: \", getSelectedMealTypes().map(type => type.charAt(0).toUpperCase() + type.slice(1)).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: suggestions.map(meal => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%',\n              transition: 'transform 0.2s',\n              '&:hover': {\n                transform: 'translateY(-4px)',\n                boxShadow: 4\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"200\",\n              image: meal.image,\n              alt: meal.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: meal.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [meal.calories, \" calories \\u2022 \", meal.time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 17\n          }, this)\n        }, meal.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 5\n  }, this);\n}\n_s(MealPlanner, \"niYfVHzOutSFUBVVR5Ovr2X994c=\");\n_c = MealPlanner;\nexport default MealPlanner;\nvar _c;\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","TextField","Button","Card","CardContent","CardMedia","Grid","Paper","CircularProgress","FormControl","Stack","Checkbox","FormGroup","FormControlLabel","Stepper","Step","StepLabel","StepContent","ToggleButton","ToggleButtonGroup","Chip","DatePicker","LocalizationProvider","AdapterDateFns","SendIcon","CalendarMonthIcon","RepeatIcon","TodayIcon","addDays","format","startOfToday","endOfToday","jsxDEV","_jsxDEV","mockMeals","id","name","image","calories","time","thinkingPhrases","mealTypes","label","weekDays","MealPlanner","_s","activeStep","setActiveStep","prompt","setPrompt","loading","setLoading","suggestions","setSuggestions","selectedMeals","setSelectedMeals","breakfast","lunch","dinner","snack","planType","setPlanType","startDate","setStartDate","endDate","setEndDate","selectedDays","setSelectedDays","thinkingText","setThinkingText","currentPhraseIndex","setCurrentPhraseIndex","currentCharIndex","setCurrentCharIndex","handlePlanTypeChange","event","newType","handleDayToggle","day","prev","includes","filter","d","handleMealTypeChange","target","checked","getSelectedMealTypes","Object","entries","_","isSelected","map","type","handleNext","prevStep","handleBack","phraseInterval","setInterval","length","charInterval","currentPhrase","substring","clearInterval","handleSubmit","e","preventDefault","setTimeout","steps","content","spacing","children","value","exclusive","onChange","fullWidth","sx","mb","py","display","flexDirection","gap","fileName","_jsxFileName","lineNumber","columnNumber","variant","textAlign","color","gutterBottom","Date","dateAdapter","newValue","disablePast","slotProps","textField","minDate","flexWrap","justifyContent","onClick","minWidth","fontSize","component","width","p","border","borderColor","borderRadius","container","item","xs","sm","control","placeholder","multiline","rows","isStepValid","step","values","some","Boolean","trim","md","onSubmit","elevation","maxWidth","mx","orientation","index","mt","disabled","minHeight","alignItems","fontWeight","opacity","animation","charAt","toUpperCase","slice","join","meal","height","transition","transform","boxShadow","alt","_c","$RefreshReg$"],"sources":["/Users/zacharyjeffreys/Documents/GitHub/MealBuddy/src/components/MealPlanner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Grid,\n  Paper,\n  CircularProgress,\n  FormControl,\n  Stack,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  Stepper,\n  Step,\n  StepLabel,\n  StepContent,\n  ToggleButton,\n  ToggleButtonGroup,\n  Chip,\n} from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport SendIcon from '@mui/icons-material/Send';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport RepeatIcon from '@mui/icons-material/Repeat';\nimport TodayIcon from '@mui/icons-material/Today';\nimport { addDays, format, startOfToday, endOfToday } from 'date-fns';\n\n// Mock data for meal suggestions (replace with actual API calls later)\nconst mockMeals = [\n  {\n    id: 1,\n    name: 'Grilled Chicken Salad',\n    image: 'https://source.unsplash.com/random/400x300/?salad',\n    calories: 350,\n    time: '25 mins',\n  },\n  {\n    id: 2,\n    name: 'Salmon with Quinoa',\n    image: 'https://source.unsplash.com/random/400x300/?salmon',\n    calories: 450,\n    time: '30 mins',\n  },\n  {\n    id: 3,\n    name: 'Vegetarian Stir Fry',\n    image: 'https://source.unsplash.com/random/400x300/?stirfry',\n    calories: 300,\n    time: '20 mins',\n  },\n];\n\nconst thinkingPhrases = [\n  \"Analyzing your preferences...\",\n  \"Exploring delicious options...\",\n  \"Crafting your perfect meal plan...\",\n  \"Considering nutritional balance...\",\n  \"Finding the best recipes for you...\",\n];\n\nconst mealTypes = [\n  { id: 'breakfast', label: 'Breakfast' },\n  { id: 'lunch', label: 'Lunch' },\n  { id: 'dinner', label: 'Dinner' },\n  { id: 'snack', label: 'Snacks' },\n];\n\nconst weekDays = [\n  { id: 'monday', label: 'Mon' },\n  { id: 'tuesday', label: 'Tue' },\n  { id: 'wednesday', label: 'Wed' },\n  { id: 'thursday', label: 'Thu' },\n  { id: 'friday', label: 'Fri' },\n  { id: 'saturday', label: 'Sat' },\n  { id: 'sunday', label: 'Sun' },\n];\n\nfunction MealPlanner() {\n  const [activeStep, setActiveStep] = useState(0);\n  const [prompt, setPrompt] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedMeals, setSelectedMeals] = useState({\n    breakfast: false,\n    lunch: false,\n    dinner: false,\n    snack: false,\n  });\n  const [planType, setPlanType] = useState('today');\n  const [startDate, setStartDate] = useState(startOfToday());\n  const [endDate, setEndDate] = useState(endOfToday());\n  const [selectedDays, setSelectedDays] = useState([]);\n  const [thinkingText, setThinkingText] = useState('');\n  const [currentPhraseIndex, setCurrentPhraseIndex] = useState(0);\n  const [currentCharIndex, setCurrentCharIndex] = useState(0);\n\n  const handlePlanTypeChange = (event, newType) => {\n    if (newType !== null) {\n      setPlanType(newType);\n      if (newType === 'today') {\n        setStartDate(startOfToday());\n        setEndDate(endOfToday());\n      } else if (newType === 'date-range') {\n        setStartDate(startOfToday());\n        setEndDate(addDays(startOfToday(), 7));\n      }\n    }\n  };\n\n  const handleDayToggle = (day) => {\n    setSelectedDays(prev => \n      prev.includes(day)\n        ? prev.filter(d => d !== day)\n        : [...prev, day]\n    );\n  };\n\n  const handleMealTypeChange = (event) => {\n    setSelectedMeals({\n      ...selectedMeals,\n      [event.target.name]: event.target.checked,\n    });\n  };\n\n  const getSelectedMealTypes = () => {\n    return Object.entries(selectedMeals)\n      .filter(([_, isSelected]) => isSelected)\n      .map(([type]) => type);\n  };\n\n  const handleNext = () => {\n    setActiveStep((prevStep) => prevStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevStep) => prevStep - 1);\n  };\n\n  useEffect(() => {\n    if (loading) {\n      const phraseInterval = setInterval(() => {\n        setCurrentPhraseIndex((prev) => (prev + 1) % thinkingPhrases.length);\n        setCurrentCharIndex(0);\n      }, 2000);\n\n      const charInterval = setInterval(() => {\n        setCurrentCharIndex((prev) => {\n          const currentPhrase = thinkingPhrases[currentPhraseIndex];\n          if (prev < currentPhrase.length) {\n            setThinkingText(currentPhrase.substring(0, prev + 1));\n            return prev + 1;\n          }\n          return prev;\n        });\n      }, 50);\n\n      return () => {\n        clearInterval(phraseInterval);\n        clearInterval(charInterval);\n      };\n    } else {\n      setThinkingText('');\n      setCurrentPhraseIndex(0);\n      setCurrentCharIndex(0);\n    }\n  }, [loading, currentPhraseIndex]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    // Simulate API call\n    setTimeout(() => {\n      setSuggestions(mockMeals);\n      setLoading(false);\n    }, 4000);\n  };\n\n  const steps = [\n    {\n      label: 'Choose When to Plan',\n      content: (\n        <Stack spacing={3}>\n          <ToggleButtonGroup\n            value={planType}\n            exclusive\n            onChange={handlePlanTypeChange}\n            fullWidth\n            sx={{ mb: 2 }}\n          >\n            <ToggleButton \n              value=\"today\" \n              aria-label=\"today\"\n              sx={{ \n                py: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 1\n              }}\n            >\n              <TodayIcon />\n              <Typography variant=\"body2\">Today</Typography>\n            </ToggleButton>\n            <ToggleButton \n              value=\"date-range\" \n              aria-label=\"date range\"\n              sx={{ \n                py: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 1\n              }}\n            >\n              <CalendarMonthIcon />\n              <Typography variant=\"body2\">Date Range</Typography>\n            </ToggleButton>\n            <ToggleButton \n              value=\"recurring\" \n              aria-label=\"recurring\"\n              sx={{ \n                py: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 1\n              }}\n            >\n              <RepeatIcon />\n              <Typography variant=\"body2\">Weekly</Typography>\n            </ToggleButton>\n          </ToggleButtonGroup>\n\n          {planType === 'today' ? (\n            <Box sx={{ textAlign: 'center' }}>\n              <Typography variant=\"h6\" color=\"primary\" gutterBottom>\n                Planning for Today\n              </Typography>\n              <Typography variant=\"body1\" color=\"text.secondary\">\n                {format(new Date(), 'EEEE, MMMM d, yyyy')}\n              </Typography>\n            </Box>\n          ) : planType === 'date-range' ? (\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Stack spacing={2}>\n                <DatePicker\n                  label=\"Start Date\"\n                  value={startDate}\n                  onChange={(newValue) => {\n                    setStartDate(newValue);\n                    setEndDate(addDays(newValue, 7));\n                  }}\n                  disablePast\n                  slotProps={{\n                    textField: { fullWidth: true },\n                  }}\n                />\n                <DatePicker\n                  label=\"End Date\"\n                  value={endDate}\n                  onChange={(newValue) => setEndDate(newValue)}\n                  disablePast\n                  minDate={startDate}\n                  slotProps={{\n                    textField: { fullWidth: true },\n                  }}\n                />\n              </Stack>\n            </LocalizationProvider>\n          ) : (\n            <Box>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Select days for your weekly meal plan:\n              </Typography>\n              <Box \n                sx={{ \n                  display: 'flex', \n                  gap: 1, \n                  flexWrap: 'wrap',\n                  justifyContent: 'center'\n                }}\n              >\n                {weekDays.map((day) => (\n                  <Chip\n                    key={day.id}\n                    label={day.label}\n                    onClick={() => handleDayToggle(day.id)}\n                    color=\"primary\"\n                    variant={selectedDays.includes(day.id) ? \"filled\" : \"outlined\"}\n                    sx={{ \n                      minWidth: '70px',\n                      fontSize: '1rem',\n                    }}\n                  />\n                ))}\n              </Box>\n            </Box>\n          )}\n        </Stack>\n      ),\n    },\n    {\n      label: 'Select Meal Types',\n      content: (\n        <FormControl \n          component=\"fieldset\" \n          sx={{ \n            width: '100%',\n            p: 2, \n            border: '1px solid',\n            borderColor: 'divider',\n            borderRadius: 1\n          }}\n        >\n          <Grid container spacing={2}>\n            {mealTypes.map((type) => (\n              <Grid item xs={6} sm={3} key={type.id}>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={selectedMeals[type.id]}\n                      onChange={handleMealTypeChange}\n                      name={type.id}\n                      color=\"primary\"\n                    />\n                  }\n                  label={type.label}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </FormControl>\n      ),\n    },\n    {\n      label: 'Describe Your Preferences',\n      content: (\n        <TextField\n          fullWidth\n          variant=\"outlined\"\n          placeholder=\"E.g., 'I want healthy vegetarian meals' or 'Quick protein-rich recipes'\"\n          value={prompt}\n          onChange={(e) => setPrompt(e.target.value)}\n          multiline\n          rows={3}\n        />\n      ),\n    },\n  ];\n\n  const isStepValid = (step) => {\n    switch (step) {\n      case 0:\n        if (planType === 'today') return true;\n        return planType === 'date-range' \n          ? (startDate && endDate && endDate >= startDate)\n          : selectedDays.length > 0;\n      case 1:\n        return Object.values(selectedMeals).some(Boolean);\n      case 2:\n        return prompt.trim().length > 0;\n      default:\n        return true;\n    }\n  };\n\n  return (\n    <Box sx={{ py: 4 }}>\n      <Typography\n        variant=\"h1\"\n        sx={{\n          mb: 3,\n          textAlign: 'center',\n          fontSize: { xs: '2.5rem', md: '3.5rem' },\n        }}\n      >\n        Meal planning made easy\n      </Typography>\n      \n      <Typography\n        variant=\"h6\"\n        color=\"text.secondary\"\n        sx={{ mb: 4, textAlign: 'center' }}\n      >\n        Tell us what you're looking for, and we'll create a personalized meal plan\n      </Typography>\n\n      <Paper\n        component=\"form\"\n        onSubmit={handleSubmit}\n        elevation={2}\n        sx={{\n          p: 3,\n          maxWidth: 800,\n          mx: 'auto',\n          mb: 6,\n          borderRadius: 2,\n        }}\n      >\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\n          {steps.map((step, index) => (\n            <Step key={step.label}>\n              <StepLabel>{step.label}</StepLabel>\n              <StepContent>\n                <Box sx={{ mb: 2 }}>\n                  {step.content}\n                  <Box sx={{ mt: 2, display: 'flex', gap: 1 }}>\n                    <Button\n                      variant=\"contained\"\n                      onClick={index === steps.length - 1 ? handleSubmit : handleNext}\n                      disabled={loading || !isStepValid(index)}\n                    >\n                      {index === steps.length - 1 ? 'Generate Plan' : 'Continue'}\n                    </Button>\n                    {index > 0 && (\n                      <Button onClick={handleBack}>\n                        Back\n                      </Button>\n                    )}\n                  </Box>\n                </Box>\n              </StepContent>\n            </Step>\n          ))}\n        </Stepper>\n      </Paper>\n\n      {loading && (\n        <Box\n          sx={{\n            textAlign: 'center',\n            mb: 4,\n            minHeight: '3em',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Typography\n            variant=\"h6\"\n            color=\"primary\"\n            sx={{\n              fontWeight: 500,\n              opacity: 0.9,\n              animation: 'pulse 1.5s infinite',\n              '@keyframes pulse': {\n                '0%': { opacity: 0.6 },\n                '50%': { opacity: 1 },\n                '100%': { opacity: 0.6 },\n              },\n            }}\n          >\n            {thinkingText}\n          </Typography>\n        </Box>\n      )}\n\n      {suggestions.length > 0 && (\n        <Box>\n          <Typography variant=\"h5\" sx={{ mb: 3 }}>\n            Your Meal Plan\n          </Typography>\n          <Box sx={{ mb: 2 }}>\n            <Typography variant=\"subtitle1\" color=\"text.secondary\">\n              {planType === 'today' \n                ? `Today, ${format(new Date(), 'MMMM d, yyyy')}`\n                : planType === 'date-range'\n                  ? `${format(startDate, 'MMM d, yyyy')} - ${format(endDate, 'MMM d, yyyy')}`\n                  : `Weekly plan for: ${selectedDays.map(day => \n                      day.charAt(0).toUpperCase() + day.slice(1)\n                    ).join(', ')}`\n              }\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"text.secondary\">\n              Selected meal types: {getSelectedMealTypes().map(type => \n                type.charAt(0).toUpperCase() + type.slice(1)\n              ).join(', ')}\n            </Typography>\n          </Box>\n          <Grid container spacing={3}>\n            {suggestions.map((meal) => (\n              <Grid item xs={12} sm={6} md={4} key={meal.id}>\n                <Card \n                  sx={{ \n                    height: '100%',\n                    transition: 'transform 0.2s',\n                    '&:hover': {\n                      transform: 'translateY(-4px)',\n                      boxShadow: 4,\n                    },\n                  }}\n                >\n                  <CardMedia\n                    component=\"img\"\n                    height=\"200\"\n                    image={meal.image}\n                    alt={meal.name}\n                  />\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      {meal.name}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {meal.calories} calories • {meal.time}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default MealPlanner; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}