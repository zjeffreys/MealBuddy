{"ast":null,"code":"var _jsxFileName = \"/Users/zacharyjeffreys/Documents/GitHub/MealBuddy/src/components/MealPlanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, TextField, Button, Card, CardContent, CardMedia, Grid, Paper, CircularProgress, Select, MenuItem, FormControl, InputLabel, Stack, Checkbox, FormGroup, FormControlLabel, Stepper, Step, StepLabel, StepContent } from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport SendIcon from '@mui/icons-material/Send';\nimport { addDays } from 'date-fns';\n\n// Mock data for meal suggestions (replace with actual API calls later)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockMeals = [{\n  id: 1,\n  name: 'Grilled Chicken Salad',\n  image: 'https://source.unsplash.com/random/400x300/?salad',\n  calories: 350,\n  time: '25 mins'\n}, {\n  id: 2,\n  name: 'Salmon with Quinoa',\n  image: 'https://source.unsplash.com/random/400x300/?salmon',\n  calories: 450,\n  time: '30 mins'\n}, {\n  id: 3,\n  name: 'Vegetarian Stir Fry',\n  image: 'https://source.unsplash.com/random/400x300/?stirfry',\n  calories: 300,\n  time: '20 mins'\n}];\nconst thinkingPhrases = [\"Analyzing your preferences...\", \"Exploring delicious options...\", \"Crafting your perfect meal plan...\", \"Considering nutritional balance...\", \"Finding the best recipes for you...\"];\nconst mealTypes = [{\n  id: 'breakfast',\n  label: 'Breakfast'\n}, {\n  id: 'lunch',\n  label: 'Lunch'\n}, {\n  id: 'dinner',\n  label: 'Dinner'\n}, {\n  id: 'snack',\n  label: 'Snacks'\n}];\nfunction MealPlanner() {\n  _s();\n  const [activeStep, setActiveStep] = useState(0);\n  const [prompt, setPrompt] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedMeals, setSelectedMeals] = useState({\n    breakfast: false,\n    lunch: false,\n    dinner: false,\n    snack: false\n  });\n  const [planDuration, setPlanDuration] = useState(1);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(addDays(new Date(), 1));\n  const [thinkingText, setThinkingText] = useState('');\n  const [currentPhraseIndex, setCurrentPhraseIndex] = useState(0);\n  const [currentCharIndex, setCurrentCharIndex] = useState(0);\n  useEffect(() => {\n    // Update end date when duration changes\n    setEndDate(addDays(startDate, planDuration));\n  }, [planDuration, startDate]);\n  const handleMealTypeChange = event => {\n    setSelectedMeals({\n      ...selectedMeals,\n      [event.target.name]: event.target.checked\n    });\n  };\n  const getSelectedMealTypes = () => {\n    return Object.entries(selectedMeals).filter(([_, isSelected]) => isSelected).map(([type]) => type);\n  };\n  const handleNext = () => {\n    setActiveStep(prevStep => prevStep + 1);\n  };\n  const handleBack = () => {\n    setActiveStep(prevStep => prevStep - 1);\n  };\n  useEffect(() => {\n    if (loading) {\n      const phraseInterval = setInterval(() => {\n        setCurrentPhraseIndex(prev => (prev + 1) % thinkingPhrases.length);\n        setCurrentCharIndex(0);\n      }, 2000);\n      const charInterval = setInterval(() => {\n        setCurrentCharIndex(prev => {\n          const currentPhrase = thinkingPhrases[currentPhraseIndex];\n          if (prev < currentPhrase.length) {\n            setThinkingText(currentPhrase.substring(0, prev + 1));\n            return prev + 1;\n          }\n          return prev;\n        });\n      }, 50);\n      return () => {\n        clearInterval(phraseInterval);\n        clearInterval(charInterval);\n      };\n    } else {\n      setThinkingText('');\n      setCurrentPhraseIndex(0);\n      setCurrentCharIndex(0);\n    }\n  }, [loading, currentPhraseIndex]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    // Simulate API call\n    setTimeout(() => {\n      setSuggestions(mockMeals);\n      setLoading(false);\n    }, 4000);\n  };\n  const steps = [{\n    label: 'Select Plan Duration',\n    content: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Plan Duration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: planDuration,\n        label: \"Plan Duration\",\n        onChange: e => setPlanDuration(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 1,\n          children: \"1 day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 2,\n          children: \"2 days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 3,\n          children: \"3 days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 4,\n          children: \"4 days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 5,\n          children: \"5 days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 6,\n          children: \"6 days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 7,\n          children: \"1 week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)\n  }, {\n    label: 'Choose Dates',\n    content: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n      dateAdapter: AdapterDateFns,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n          label: \"Start Date\",\n          value: startDate,\n          onChange: newValue => setStartDate(newValue),\n          disablePast: true,\n          slotProps: {\n            textField: {\n              fullWidth: true\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          label: \"End Date\",\n          value: endDate,\n          disabled: true,\n          slotProps: {\n            textField: {\n              fullWidth: true\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this)\n  }, {\n    label: 'Select Meal Types',\n    content: /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      sx: {\n        width: '100%',\n        p: 2,\n        border: '1px solid',\n        borderColor: 'divider',\n        borderRadius: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: mealTypes.map(type => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: selectedMeals[type.id],\n              onChange: handleMealTypeChange,\n              name: type.id,\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 21\n            }, this),\n            label: type.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this)\n        }, type.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this)\n  }, {\n    label: 'Describe Your Preferences',\n    content: /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      placeholder: \"E.g., 'I want healthy vegetarian meals' or 'Quick protein-rich recipes'\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value),\n      multiline: true,\n      rows: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      sx: {\n        mb: 3,\n        textAlign: 'center',\n        fontSize: {\n          xs: '2.5rem',\n          md: '3.5rem'\n        }\n      },\n      children: \"Meal planning made easy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"text.secondary\",\n      sx: {\n        mb: 4,\n        textAlign: 'center'\n      },\n      children: \"Tell us what you're looking for, and we'll create a personalized meal plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      elevation: 2,\n      sx: {\n        p: 3,\n        maxWidth: 800,\n        mx: 'auto',\n        mb: 6,\n        borderRadius: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        orientation: \"vertical\",\n        children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(Step, {\n          children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n            children: step.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2\n              },\n              children: [step.content, /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2,\n                  display: 'flex',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: index === steps.length - 1 ? handleSubmit : handleNext,\n                  disabled: loading || index === 0 && !planDuration || index === 2 && !Object.values(selectedMeals).some(Boolean) || index === 3 && !prompt,\n                  children: index === steps.length - 1 ? 'Generate Plan' : 'Continue'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, this), index > 0 && /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleBack,\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, step.label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        mb: 4,\n        minHeight: '3em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"primary\",\n        sx: {\n          fontWeight: 500,\n          opacity: 0.9,\n          animation: 'pulse 1.5s infinite',\n          '@keyframes pulse': {\n            '0%': {\n              opacity: 0.6\n            },\n            '50%': {\n              opacity: 1\n            },\n            '100%': {\n              opacity: 0.6\n            }\n          }\n        },\n        children: thinkingText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 3\n        },\n        children: \"Your Meal Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: \"text.secondary\",\n          children: `${startDate.toLocaleDateString()} - ${endDate.toLocaleDateString()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: \"text.secondary\",\n          children: [\"Selected meal types: \", getSelectedMealTypes().map(type => type.charAt(0).toUpperCase() + type.slice(1)).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: suggestions.map(meal => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%',\n              transition: 'transform 0.2s',\n              '&:hover': {\n                transform: 'translateY(-4px)',\n                boxShadow: 4\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"200\",\n              image: meal.image,\n              alt: meal.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: meal.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [meal.calories, \" calories \\u2022 \", meal.time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 17\n          }, this)\n        }, meal.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n}\n_s(MealPlanner, \"elU2Cx3GrZtJHy73wzLKb/+gPJ0=\");\n_c = MealPlanner;\nexport default MealPlanner;\nvar _c;\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","TextField","Button","Card","CardContent","CardMedia","Grid","Paper","CircularProgress","Select","MenuItem","FormControl","InputLabel","Stack","Checkbox","FormGroup","FormControlLabel","Stepper","Step","StepLabel","StepContent","DatePicker","LocalizationProvider","AdapterDateFns","SendIcon","addDays","jsxDEV","_jsxDEV","mockMeals","id","name","image","calories","time","thinkingPhrases","mealTypes","label","MealPlanner","_s","activeStep","setActiveStep","prompt","setPrompt","loading","setLoading","suggestions","setSuggestions","selectedMeals","setSelectedMeals","breakfast","lunch","dinner","snack","planDuration","setPlanDuration","startDate","setStartDate","Date","endDate","setEndDate","thinkingText","setThinkingText","currentPhraseIndex","setCurrentPhraseIndex","currentCharIndex","setCurrentCharIndex","handleMealTypeChange","event","target","checked","getSelectedMealTypes","Object","entries","filter","_","isSelected","map","type","handleNext","prevStep","handleBack","phraseInterval","setInterval","prev","length","charInterval","currentPhrase","substring","clearInterval","handleSubmit","e","preventDefault","setTimeout","steps","content","fullWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","dateAdapter","spacing","newValue","disablePast","slotProps","textField","disabled","component","sx","width","p","border","borderColor","borderRadius","container","item","xs","sm","control","color","variant","placeholder","multiline","rows","py","mb","textAlign","fontSize","md","onSubmit","elevation","maxWidth","mx","orientation","step","index","mt","display","gap","onClick","values","some","Boolean","minHeight","alignItems","justifyContent","fontWeight","opacity","animation","toLocaleDateString","charAt","toUpperCase","slice","join","meal","height","transition","transform","boxShadow","alt","gutterBottom","_c","$RefreshReg$"],"sources":["/Users/zacharyjeffreys/Documents/GitHub/MealBuddy/src/components/MealPlanner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Grid,\n  Paper,\n  CircularProgress,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Stack,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  Stepper,\n  Step,\n  StepLabel,\n  StepContent,\n} from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport SendIcon from '@mui/icons-material/Send';\nimport { addDays } from 'date-fns';\n\n// Mock data for meal suggestions (replace with actual API calls later)\nconst mockMeals = [\n  {\n    id: 1,\n    name: 'Grilled Chicken Salad',\n    image: 'https://source.unsplash.com/random/400x300/?salad',\n    calories: 350,\n    time: '25 mins',\n  },\n  {\n    id: 2,\n    name: 'Salmon with Quinoa',\n    image: 'https://source.unsplash.com/random/400x300/?salmon',\n    calories: 450,\n    time: '30 mins',\n  },\n  {\n    id: 3,\n    name: 'Vegetarian Stir Fry',\n    image: 'https://source.unsplash.com/random/400x300/?stirfry',\n    calories: 300,\n    time: '20 mins',\n  },\n];\n\nconst thinkingPhrases = [\n  \"Analyzing your preferences...\",\n  \"Exploring delicious options...\",\n  \"Crafting your perfect meal plan...\",\n  \"Considering nutritional balance...\",\n  \"Finding the best recipes for you...\",\n];\n\nconst mealTypes = [\n  { id: 'breakfast', label: 'Breakfast' },\n  { id: 'lunch', label: 'Lunch' },\n  { id: 'dinner', label: 'Dinner' },\n  { id: 'snack', label: 'Snacks' },\n];\n\nfunction MealPlanner() {\n  const [activeStep, setActiveStep] = useState(0);\n  const [prompt, setPrompt] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedMeals, setSelectedMeals] = useState({\n    breakfast: false,\n    lunch: false,\n    dinner: false,\n    snack: false,\n  });\n  const [planDuration, setPlanDuration] = useState(1);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(addDays(new Date(), 1));\n  const [thinkingText, setThinkingText] = useState('');\n  const [currentPhraseIndex, setCurrentPhraseIndex] = useState(0);\n  const [currentCharIndex, setCurrentCharIndex] = useState(0);\n\n  useEffect(() => {\n    // Update end date when duration changes\n    setEndDate(addDays(startDate, planDuration));\n  }, [planDuration, startDate]);\n\n  const handleMealTypeChange = (event) => {\n    setSelectedMeals({\n      ...selectedMeals,\n      [event.target.name]: event.target.checked,\n    });\n  };\n\n  const getSelectedMealTypes = () => {\n    return Object.entries(selectedMeals)\n      .filter(([_, isSelected]) => isSelected)\n      .map(([type]) => type);\n  };\n\n  const handleNext = () => {\n    setActiveStep((prevStep) => prevStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevStep) => prevStep - 1);\n  };\n\n  useEffect(() => {\n    if (loading) {\n      const phraseInterval = setInterval(() => {\n        setCurrentPhraseIndex((prev) => (prev + 1) % thinkingPhrases.length);\n        setCurrentCharIndex(0);\n      }, 2000);\n\n      const charInterval = setInterval(() => {\n        setCurrentCharIndex((prev) => {\n          const currentPhrase = thinkingPhrases[currentPhraseIndex];\n          if (prev < currentPhrase.length) {\n            setThinkingText(currentPhrase.substring(0, prev + 1));\n            return prev + 1;\n          }\n          return prev;\n        });\n      }, 50);\n\n      return () => {\n        clearInterval(phraseInterval);\n        clearInterval(charInterval);\n      };\n    } else {\n      setThinkingText('');\n      setCurrentPhraseIndex(0);\n      setCurrentCharIndex(0);\n    }\n  }, [loading, currentPhraseIndex]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    // Simulate API call\n    setTimeout(() => {\n      setSuggestions(mockMeals);\n      setLoading(false);\n    }, 4000);\n  };\n\n  const steps = [\n    {\n      label: 'Select Plan Duration',\n      content: (\n        <FormControl fullWidth>\n          <InputLabel>Plan Duration</InputLabel>\n          <Select\n            value={planDuration}\n            label=\"Plan Duration\"\n            onChange={(e) => setPlanDuration(e.target.value)}\n          >\n            <MenuItem value={1}>1 day</MenuItem>\n            <MenuItem value={2}>2 days</MenuItem>\n            <MenuItem value={3}>3 days</MenuItem>\n            <MenuItem value={4}>4 days</MenuItem>\n            <MenuItem value={5}>5 days</MenuItem>\n            <MenuItem value={6}>6 days</MenuItem>\n            <MenuItem value={7}>1 week</MenuItem>\n          </Select>\n        </FormControl>\n      ),\n    },\n    {\n      label: 'Choose Dates',\n      content: (\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Stack spacing={2}>\n            <DatePicker\n              label=\"Start Date\"\n              value={startDate}\n              onChange={(newValue) => setStartDate(newValue)}\n              disablePast\n              slotProps={{\n                textField: { fullWidth: true },\n              }}\n            />\n            <DatePicker\n              label=\"End Date\"\n              value={endDate}\n              disabled\n              slotProps={{\n                textField: { fullWidth: true },\n              }}\n            />\n          </Stack>\n        </LocalizationProvider>\n      ),\n    },\n    {\n      label: 'Select Meal Types',\n      content: (\n        <FormControl \n          component=\"fieldset\" \n          sx={{ \n            width: '100%',\n            p: 2, \n            border: '1px solid',\n            borderColor: 'divider',\n            borderRadius: 1\n          }}\n        >\n          <Grid container spacing={2}>\n            {mealTypes.map((type) => (\n              <Grid item xs={6} sm={3} key={type.id}>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={selectedMeals[type.id]}\n                      onChange={handleMealTypeChange}\n                      name={type.id}\n                      color=\"primary\"\n                    />\n                  }\n                  label={type.label}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </FormControl>\n      ),\n    },\n    {\n      label: 'Describe Your Preferences',\n      content: (\n        <TextField\n          fullWidth\n          variant=\"outlined\"\n          placeholder=\"E.g., 'I want healthy vegetarian meals' or 'Quick protein-rich recipes'\"\n          value={prompt}\n          onChange={(e) => setPrompt(e.target.value)}\n          multiline\n          rows={3}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <Box sx={{ py: 4 }}>\n      <Typography\n        variant=\"h1\"\n        sx={{\n          mb: 3,\n          textAlign: 'center',\n          fontSize: { xs: '2.5rem', md: '3.5rem' },\n        }}\n      >\n        Meal planning made easy\n      </Typography>\n      \n      <Typography\n        variant=\"h6\"\n        color=\"text.secondary\"\n        sx={{ mb: 4, textAlign: 'center' }}\n      >\n        Tell us what you're looking for, and we'll create a personalized meal plan\n      </Typography>\n\n      <Paper\n        component=\"form\"\n        onSubmit={handleSubmit}\n        elevation={2}\n        sx={{\n          p: 3,\n          maxWidth: 800,\n          mx: 'auto',\n          mb: 6,\n          borderRadius: 2,\n        }}\n      >\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\n          {steps.map((step, index) => (\n            <Step key={step.label}>\n              <StepLabel>{step.label}</StepLabel>\n              <StepContent>\n                <Box sx={{ mb: 2 }}>\n                  {step.content}\n                  <Box sx={{ mt: 2, display: 'flex', gap: 1 }}>\n                    <Button\n                      variant=\"contained\"\n                      onClick={index === steps.length - 1 ? handleSubmit : handleNext}\n                      disabled={\n                        loading ||\n                        (index === 0 && !planDuration) ||\n                        (index === 2 && !Object.values(selectedMeals).some(Boolean)) ||\n                        (index === 3 && !prompt)\n                      }\n                    >\n                      {index === steps.length - 1 ? 'Generate Plan' : 'Continue'}\n                    </Button>\n                    {index > 0 && (\n                      <Button onClick={handleBack}>\n                        Back\n                      </Button>\n                    )}\n                  </Box>\n                </Box>\n              </StepContent>\n            </Step>\n          ))}\n        </Stepper>\n      </Paper>\n\n      {loading && (\n        <Box\n          sx={{\n            textAlign: 'center',\n            mb: 4,\n            minHeight: '3em',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Typography\n            variant=\"h6\"\n            color=\"primary\"\n            sx={{\n              fontWeight: 500,\n              opacity: 0.9,\n              animation: 'pulse 1.5s infinite',\n              '@keyframes pulse': {\n                '0%': { opacity: 0.6 },\n                '50%': { opacity: 1 },\n                '100%': { opacity: 0.6 },\n              },\n            }}\n          >\n            {thinkingText}\n          </Typography>\n        </Box>\n      )}\n\n      {suggestions.length > 0 && (\n        <Box>\n          <Typography variant=\"h5\" sx={{ mb: 3 }}>\n            Your Meal Plan\n          </Typography>\n          <Box sx={{ mb: 2 }}>\n            <Typography variant=\"subtitle1\" color=\"text.secondary\">\n              {`${startDate.toLocaleDateString()} - ${endDate.toLocaleDateString()}`}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"text.secondary\">\n              Selected meal types: {getSelectedMealTypes().map(type => type.charAt(0).toUpperCase() + type.slice(1)).join(', ')}\n            </Typography>\n          </Box>\n          <Grid container spacing={3}>\n            {suggestions.map((meal) => (\n              <Grid item xs={12} sm={6} md={4} key={meal.id}>\n                <Card \n                  sx={{ \n                    height: '100%',\n                    transition: 'transform 0.2s',\n                    '&:hover': {\n                      transform: 'translateY(-4px)',\n                      boxShadow: 4,\n                    },\n                  }}\n                >\n                  <CardMedia\n                    component=\"img\"\n                    height=\"200\"\n                    image={meal.image}\n                    alt={meal.name}\n                  />\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      {meal.name}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {meal.calories} calories • {meal.time}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default MealPlanner; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}