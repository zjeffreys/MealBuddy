{"ast":null,"code":"'use client';\n\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { appendOwnerState } from './appendOwnerState';\nimport { mergeSlotProps } from './mergeSlotProps';\nimport { resolveComponentProps } from './resolveComponentProps';\n/**\n * @ignore - do not document.\n * Builds the props to be passed into the slot of an unstyled component.\n * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.\n * If the slot component is not a host component, it also merges in the `ownerState`.\n *\n * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.\n */\nexport function useSlotProps(parameters) {\n  const {\n    elementType,\n    externalSlotProps,\n    ownerState,\n    skipResolvingSlotProps = false,\n    ...rest\n  } = parameters;\n  const resolvedComponentsProps = skipResolvingSlotProps ? {} : resolveComponentProps(externalSlotProps, ownerState);\n  const {\n    props: mergedProps,\n    internalRef\n  } = mergeSlotProps({\n    ...rest,\n    externalSlotProps: resolvedComponentsProps\n  });\n  const ref = useForkRef(internalRef, resolvedComponentsProps?.ref, parameters.additionalProps?.ref);\n  const props = appendOwnerState(elementType, {\n    ...mergedProps,\n    ref\n  }, ownerState);\n  return props;\n}","map":{"version":3,"names":["unstable_useForkRef","useForkRef","appendOwnerState","mergeSlotProps","resolveComponentProps","useSlotProps","parameters","elementType","externalSlotProps","ownerState","skipResolvingSlotProps","rest","resolvedComponentsProps","props","mergedProps","internalRef","ref","additionalProps"],"sources":["/Users/zacharyjeffreys/Documents/GitHub/MealBuddy/node_modules/@mui/base/utils/useSlotProps.js"],"sourcesContent":["'use client';\n\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { appendOwnerState } from './appendOwnerState';\nimport { mergeSlotProps } from './mergeSlotProps';\nimport { resolveComponentProps } from './resolveComponentProps';\n/**\n * @ignore - do not document.\n * Builds the props to be passed into the slot of an unstyled component.\n * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.\n * If the slot component is not a host component, it also merges in the `ownerState`.\n *\n * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.\n */\nexport function useSlotProps(parameters) {\n  const {\n    elementType,\n    externalSlotProps,\n    ownerState,\n    skipResolvingSlotProps = false,\n    ...rest\n  } = parameters;\n  const resolvedComponentsProps = skipResolvingSlotProps ? {} : resolveComponentProps(externalSlotProps, ownerState);\n  const {\n    props: mergedProps,\n    internalRef\n  } = mergeSlotProps({\n    ...rest,\n    externalSlotProps: resolvedComponentsProps\n  });\n  const ref = useForkRef(internalRef, resolvedComponentsProps?.ref, parameters.additionalProps?.ref);\n  const props = appendOwnerState(elementType, {\n    ...mergedProps,\n    ref\n  }, ownerState);\n  return props;\n}"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,mBAAmB,IAAIC,UAAU,QAAQ,YAAY;AAC9D,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACC,UAAU,EAAE;EACvC,MAAM;IACJC,WAAW;IACXC,iBAAiB;IACjBC,UAAU;IACVC,sBAAsB,GAAG,KAAK;IAC9B,GAAGC;EACL,CAAC,GAAGL,UAAU;EACd,MAAMM,uBAAuB,GAAGF,sBAAsB,GAAG,CAAC,CAAC,GAAGN,qBAAqB,CAACI,iBAAiB,EAAEC,UAAU,CAAC;EAClH,MAAM;IACJI,KAAK,EAAEC,WAAW;IAClBC;EACF,CAAC,GAAGZ,cAAc,CAAC;IACjB,GAAGQ,IAAI;IACPH,iBAAiB,EAAEI;EACrB,CAAC,CAAC;EACF,MAAMI,GAAG,GAAGf,UAAU,CAACc,WAAW,EAAEH,uBAAuB,EAAEI,GAAG,EAAEV,UAAU,CAACW,eAAe,EAAED,GAAG,CAAC;EAClG,MAAMH,KAAK,GAAGX,gBAAgB,CAACK,WAAW,EAAE;IAC1C,GAAGO,WAAW;IACdE;EACF,CAAC,EAAEP,UAAU,CAAC;EACd,OAAOI,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}