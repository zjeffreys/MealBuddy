{"ast":null,"code":"var _jsxFileName = \"/Users/zacharyjeffreys/Documents/GitHub/MealBuddy/src/components/MealPlanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, TextField, Button, Card, CardContent, CardMedia, Grid, Paper, CircularProgress, Select, MenuItem, FormControl, InputLabel, Stack, Checkbox, FormGroup, FormControlLabel, Divider } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\n\n// Mock data for meal suggestions (replace with actual API calls later)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockMeals = [{\n  id: 1,\n  name: 'Grilled Chicken Salad',\n  image: 'https://source.unsplash.com/random/400x300/?salad',\n  calories: 350,\n  time: '25 mins'\n}, {\n  id: 2,\n  name: 'Salmon with Quinoa',\n  image: 'https://source.unsplash.com/random/400x300/?salmon',\n  calories: 450,\n  time: '30 mins'\n}, {\n  id: 3,\n  name: 'Vegetarian Stir Fry',\n  image: 'https://source.unsplash.com/random/400x300/?stirfry',\n  calories: 300,\n  time: '20 mins'\n}];\nconst thinkingPhrases = [\"Analyzing your preferences...\", \"Exploring delicious options...\", \"Crafting your perfect meal plan...\", \"Considering nutritional balance...\", \"Finding the best recipes for you...\"];\nconst mealTypes = [{\n  id: 'breakfast',\n  label: 'Breakfast'\n}, {\n  id: 'lunch',\n  label: 'Lunch'\n}, {\n  id: 'dinner',\n  label: 'Dinner'\n}, {\n  id: 'snack',\n  label: 'Snacks'\n}];\nfunction MealPlanner() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedMeals, setSelectedMeals] = useState({\n    breakfast: false,\n    lunch: false,\n    dinner: false,\n    snack: false\n  });\n  const [planDuration, setPlanDuration] = useState(1);\n  const [thinkingText, setThinkingText] = useState('');\n  const [currentPhraseIndex, setCurrentPhraseIndex] = useState(0);\n  const [currentCharIndex, setCurrentCharIndex] = useState(0);\n  const handleMealTypeChange = event => {\n    setSelectedMeals({\n      ...selectedMeals,\n      [event.target.name]: event.target.checked\n    });\n  };\n  const getSelectedMealTypes = () => {\n    return Object.entries(selectedMeals).filter(([_, isSelected]) => isSelected).map(([type]) => type);\n  };\n  useEffect(() => {\n    if (loading) {\n      const phraseInterval = setInterval(() => {\n        setCurrentPhraseIndex(prev => (prev + 1) % thinkingPhrases.length);\n        setCurrentCharIndex(0);\n      }, 2000);\n      const charInterval = setInterval(() => {\n        setCurrentCharIndex(prev => {\n          const currentPhrase = thinkingPhrases[currentPhraseIndex];\n          if (prev < currentPhrase.length) {\n            setThinkingText(currentPhrase.substring(0, prev + 1));\n            return prev + 1;\n          }\n          return prev;\n        });\n      }, 50);\n      return () => {\n        clearInterval(phraseInterval);\n        clearInterval(charInterval);\n      };\n    } else {\n      setThinkingText('');\n      setCurrentPhraseIndex(0);\n      setCurrentCharIndex(0);\n    }\n  }, [loading, currentPhraseIndex]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    // Simulate API call\n    setTimeout(() => {\n      setSuggestions(mockMeals);\n      setLoading(false);\n    }, 4000);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      sx: {\n        mb: 3,\n        textAlign: 'center',\n        fontSize: {\n          xs: '2.5rem',\n          md: '3.5rem'\n        }\n      },\n      children: \"Meal planning made easy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"text.secondary\",\n      sx: {\n        mb: 4,\n        textAlign: 'center'\n      },\n      children: \"Tell us what you're looking for, and we'll create a personalized meal plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      elevation: 2,\n      sx: {\n        p: 3,\n        maxWidth: 800,\n        mx: 'auto',\n        mb: 6,\n        borderRadius: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"E.g., 'I want healthy vegetarian meals' or 'Quick protein-rich recipes'\",\n          value: prompt,\n          onChange: e => setPrompt(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            sx: {\n              flex: 1,\n              p: 2,\n              border: '1px solid',\n              borderColor: 'divider',\n              borderRadius: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              sx: {\n                mb: 1,\n                fontWeight: 500\n              },\n              children: \"Select Meal Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: mealTypes.map(type => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectedMeals[type.id],\n                  onChange: handleMealTypeChange,\n                  name: type.id,\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 23\n                }, this),\n                label: type.label\n              }, type.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Plan Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: planDuration,\n              label: \"Plan Duration\",\n              onChange: e => setPlanDuration(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 1,\n                children: \"1 day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 2,\n                children: \"2 days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 3,\n                children: \"3 days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 4,\n                children: \"4 days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 5,\n                children: \"5 days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 6,\n                children: \"6 days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 7,\n                children: \"1 week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          endIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20,\n            color: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 32\n          }, this) : /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 81\n          }, this),\n          type: \"submit\",\n          disabled: !prompt || loading || !Object.values(selectedMeals).some(Boolean),\n          sx: {\n            minWidth: 200\n          },\n          children: loading ? 'Generating...' : 'Get Meal Plan'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        mb: 4,\n        minHeight: '3em',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"primary\",\n        sx: {\n          fontWeight: 500,\n          opacity: 0.9,\n          animation: 'pulse 1.5s infinite',\n          '@keyframes pulse': {\n            '0%': {\n              opacity: 0.6\n            },\n            '50%': {\n              opacity: 1\n            },\n            '100%': {\n              opacity: 0.6\n            }\n          }\n        },\n        children: thinkingText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 3\n        },\n        children: `Your Meal Plan for ${planDuration} ${planDuration === 1 ? 'day' : 'days'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: \"text.secondary\",\n          children: [\"Selected meal types: \", getSelectedMealTypes().map(type => type.charAt(0).toUpperCase() + type.slice(1)).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: suggestions.map(meal => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%',\n              transition: 'transform 0.2s',\n              '&:hover': {\n                transform: 'translateY(-4px)',\n                boxShadow: 4\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"200\",\n              image: meal.image,\n              alt: meal.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: meal.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [meal.calories, \" calories \\u2022 \", meal.time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this)\n        }, meal.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(MealPlanner, \"0RHI9R7iPRM1Y0+Tj41BlnPUuNg=\");\n_c = MealPlanner;\nexport default MealPlanner;\nvar _c;\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","TextField","Button","Card","CardContent","CardMedia","Grid","Paper","CircularProgress","Select","MenuItem","FormControl","InputLabel","Stack","Checkbox","FormGroup","FormControlLabel","Divider","SendIcon","jsxDEV","_jsxDEV","mockMeals","id","name","image","calories","time","thinkingPhrases","mealTypes","label","MealPlanner","_s","prompt","setPrompt","loading","setLoading","suggestions","setSuggestions","selectedMeals","setSelectedMeals","breakfast","lunch","dinner","snack","planDuration","setPlanDuration","thinkingText","setThinkingText","currentPhraseIndex","setCurrentPhraseIndex","currentCharIndex","setCurrentCharIndex","handleMealTypeChange","event","target","checked","getSelectedMealTypes","Object","entries","filter","_","isSelected","map","type","phraseInterval","setInterval","prev","length","charInterval","currentPhrase","substring","clearInterval","handleSubmit","e","preventDefault","setTimeout","sx","py","children","variant","mb","textAlign","fontSize","xs","md","fileName","_jsxFileName","lineNumber","columnNumber","color","component","onSubmit","elevation","p","maxWidth","mx","borderRadius","spacing","fullWidth","placeholder","value","onChange","display","gap","flex","border","borderColor","fontWeight","control","size","endIcon","disabled","values","some","Boolean","minWidth","minHeight","alignItems","justifyContent","opacity","animation","charAt","toUpperCase","slice","join","container","meal","item","sm","height","transition","transform","boxShadow","alt","gutterBottom","_c","$RefreshReg$"],"sources":["/Users/zacharyjeffreys/Documents/GitHub/MealBuddy/src/components/MealPlanner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Grid,\n  Paper,\n  CircularProgress,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Stack,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  Divider,\n} from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\n\n// Mock data for meal suggestions (replace with actual API calls later)\nconst mockMeals = [\n  {\n    id: 1,\n    name: 'Grilled Chicken Salad',\n    image: 'https://source.unsplash.com/random/400x300/?salad',\n    calories: 350,\n    time: '25 mins',\n  },\n  {\n    id: 2,\n    name: 'Salmon with Quinoa',\n    image: 'https://source.unsplash.com/random/400x300/?salmon',\n    calories: 450,\n    time: '30 mins',\n  },\n  {\n    id: 3,\n    name: 'Vegetarian Stir Fry',\n    image: 'https://source.unsplash.com/random/400x300/?stirfry',\n    calories: 300,\n    time: '20 mins',\n  },\n];\n\nconst thinkingPhrases = [\n  \"Analyzing your preferences...\",\n  \"Exploring delicious options...\",\n  \"Crafting your perfect meal plan...\",\n  \"Considering nutritional balance...\",\n  \"Finding the best recipes for you...\",\n];\n\nconst mealTypes = [\n  { id: 'breakfast', label: 'Breakfast' },\n  { id: 'lunch', label: 'Lunch' },\n  { id: 'dinner', label: 'Dinner' },\n  { id: 'snack', label: 'Snacks' },\n];\n\nfunction MealPlanner() {\n  const [prompt, setPrompt] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedMeals, setSelectedMeals] = useState({\n    breakfast: false,\n    lunch: false,\n    dinner: false,\n    snack: false,\n  });\n  const [planDuration, setPlanDuration] = useState(1);\n  const [thinkingText, setThinkingText] = useState('');\n  const [currentPhraseIndex, setCurrentPhraseIndex] = useState(0);\n  const [currentCharIndex, setCurrentCharIndex] = useState(0);\n\n  const handleMealTypeChange = (event) => {\n    setSelectedMeals({\n      ...selectedMeals,\n      [event.target.name]: event.target.checked,\n    });\n  };\n\n  const getSelectedMealTypes = () => {\n    return Object.entries(selectedMeals)\n      .filter(([_, isSelected]) => isSelected)\n      .map(([type]) => type);\n  };\n\n  useEffect(() => {\n    if (loading) {\n      const phraseInterval = setInterval(() => {\n        setCurrentPhraseIndex((prev) => (prev + 1) % thinkingPhrases.length);\n        setCurrentCharIndex(0);\n      }, 2000);\n\n      const charInterval = setInterval(() => {\n        setCurrentCharIndex((prev) => {\n          const currentPhrase = thinkingPhrases[currentPhraseIndex];\n          if (prev < currentPhrase.length) {\n            setThinkingText(currentPhrase.substring(0, prev + 1));\n            return prev + 1;\n          }\n          return prev;\n        });\n      }, 50);\n\n      return () => {\n        clearInterval(phraseInterval);\n        clearInterval(charInterval);\n      };\n    } else {\n      setThinkingText('');\n      setCurrentPhraseIndex(0);\n      setCurrentCharIndex(0);\n    }\n  }, [loading, currentPhraseIndex]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    // Simulate API call\n    setTimeout(() => {\n      setSuggestions(mockMeals);\n      setLoading(false);\n    }, 4000);\n  };\n\n  return (\n    <Box sx={{ py: 4 }}>\n      <Typography\n        variant=\"h1\"\n        sx={{\n          mb: 3,\n          textAlign: 'center',\n          fontSize: { xs: '2.5rem', md: '3.5rem' },\n        }}\n      >\n        Meal planning made easy\n      </Typography>\n      \n      <Typography\n        variant=\"h6\"\n        color=\"text.secondary\"\n        sx={{ mb: 4, textAlign: 'center' }}\n      >\n        Tell us what you're looking for, and we'll create a personalized meal plan\n      </Typography>\n\n      <Paper\n        component=\"form\"\n        onSubmit={handleSubmit}\n        elevation={2}\n        sx={{\n          p: 3,\n          maxWidth: 800,\n          mx: 'auto',\n          mb: 6,\n          borderRadius: 2,\n        }}\n      >\n        <Stack spacing={2}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"E.g., 'I want healthy vegetarian meals' or 'Quick protein-rich recipes'\"\n            value={prompt}\n            onChange={(e) => setPrompt(e.target.value)}\n          />\n          \n          <Box sx={{ display: 'flex', gap: 2 }}>\n            <FormControl \n              component=\"fieldset\" \n              sx={{ \n                flex: 1,\n                p: 2, \n                border: '1px solid',\n                borderColor: 'divider',\n                borderRadius: 1\n              }}\n            >\n              <Typography variant=\"subtitle1\" sx={{ mb: 1, fontWeight: 500 }}>\n                Select Meal Types\n              </Typography>\n              <FormGroup>\n                {mealTypes.map((type) => (\n                  <FormControlLabel\n                    key={type.id}\n                    control={\n                      <Checkbox\n                        checked={selectedMeals[type.id]}\n                        onChange={handleMealTypeChange}\n                        name={type.id}\n                        color=\"primary\"\n                      />\n                    }\n                    label={type.label}\n                  />\n                ))}\n              </FormGroup>\n            </FormControl>\n\n            <FormControl fullWidth>\n              <InputLabel>Plan Duration</InputLabel>\n              <Select\n                value={planDuration}\n                label=\"Plan Duration\"\n                onChange={(e) => setPlanDuration(e.target.value)}\n              >\n                <MenuItem value={1}>1 day</MenuItem>\n                <MenuItem value={2}>2 days</MenuItem>\n                <MenuItem value={3}>3 days</MenuItem>\n                <MenuItem value={4}>4 days</MenuItem>\n                <MenuItem value={5}>5 days</MenuItem>\n                <MenuItem value={6}>6 days</MenuItem>\n                <MenuItem value={7}>1 week</MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            endIcon={loading ? <CircularProgress size={20} color=\"inherit\" /> : <SendIcon />}\n            type=\"submit\"\n            disabled={!prompt || loading || !Object.values(selectedMeals).some(Boolean)}\n            sx={{ minWidth: 200 }}\n          >\n            {loading ? 'Generating...' : 'Get Meal Plan'}\n          </Button>\n        </Stack>\n      </Paper>\n\n      {loading && (\n        <Box\n          sx={{\n            textAlign: 'center',\n            mb: 4,\n            minHeight: '3em',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Typography\n            variant=\"h6\"\n            color=\"primary\"\n            sx={{\n              fontWeight: 500,\n              opacity: 0.9,\n              animation: 'pulse 1.5s infinite',\n              '@keyframes pulse': {\n                '0%': { opacity: 0.6 },\n                '50%': { opacity: 1 },\n                '100%': { opacity: 0.6 },\n              },\n            }}\n          >\n            {thinkingText}\n          </Typography>\n        </Box>\n      )}\n\n      {suggestions.length > 0 && (\n        <Box>\n          <Typography variant=\"h5\" sx={{ mb: 3 }}>\n            {`Your Meal Plan for ${planDuration} ${planDuration === 1 ? 'day' : 'days'}`}\n          </Typography>\n          <Box sx={{ mb: 2 }}>\n            <Typography variant=\"subtitle1\" color=\"text.secondary\">\n              Selected meal types: {getSelectedMealTypes().map(type => type.charAt(0).toUpperCase() + type.slice(1)).join(', ')}\n            </Typography>\n          </Box>\n          <Grid container spacing={3}>\n            {suggestions.map((meal) => (\n              <Grid item xs={12} sm={6} md={4} key={meal.id}>\n                <Card \n                  sx={{ \n                    height: '100%',\n                    transition: 'transform 0.2s',\n                    '&:hover': {\n                      transform: 'translateY(-4px)',\n                      boxShadow: 4,\n                    },\n                  }}\n                >\n                  <CardMedia\n                    component=\"img\"\n                    height=\"200\"\n                    image={meal.image}\n                    alt={meal.name}\n                  />\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      {meal.name}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {meal.calories} calories • {meal.time}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default MealPlanner; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}